name: Build yt-dlp Docker Image

on:
    workflow_dispatch:
    workflow_call:
    push:
        branches:
            - master

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Get latest yt-dlp version
              id: ytdlp_version
              run: |
                  LATEST_VERSION=$(curl -s https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest | jq -r .tag_name)
                  echo "version=${LATEST_VERSION}" >> $GITHUB_OUTPUT

            - name: Download latest yt-dlp source
              run: |
                  wget https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz
                  mkdir yt-dlp
                  tar xzf yt-dlp.tar.gz -C yt-dlp --strip-components=1
                  rm yt-dlp.tar.gz

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=raw,value=latest
                      type=raw,value=${{ steps.ytdlp_version.outputs.version }}

            - name: List all files in the repository
              run: |
                  ls -la

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  annotations: ${{ steps.meta.outputs.annotations }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      CHANNEL=stable
                      ORIGIN=local
                      VERSION=${{ steps.ytdlp_version.outputs.version }}
